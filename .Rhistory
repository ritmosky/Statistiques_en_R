a
length(a)
mode(a)
mode(a)
attributes(a)
x <- c(-1,0,2)
x <- c(-1,0,2)
(1+x^2)*(x>1)
all(x>1)
any(x>1)
y <- c("M","F","F","M","F")
yf <- factor(y) # en définissant directement les différents éléments
attributes(y)
attributes(yf)
nlevels(yf)
X <- c(rep(10,3), rep(12,2), rep(13,4))
is.factor(X) # FALSE
is.numeric(X) # TRUE
Xf <- factor(X)
summary(Xf)
Xf
diag(3)
diag(1:4)
eigen(m)
chisq1<- function() {
n <- 1000
mu <- sample(0:10, 1)
sigma <- sample(1:10, 1)
x <- rnorm(n, mean = mu, sd = sigma)
(n - 1) * var(x) / sigma^2
}
chisq1()
chisq1()``
chisq1()
chisq1()
chisq1()
chisq2<- function() {
n <- 1000
mu <- sample(0:10, 1)
sigma <- sample(1:10, 1)
x <- rnorm(n, mean = mu, sd = sigma)
(mean(x)-mu) * sqrt(n) / sd(x)
}
chisq2()
a2 <- replicate(1000, chisq2())
a2 <- replicate(1000, chisq2())
chisq<- function() {
n <- 1000
mu <- sample(0:10, 1)
sigma <- sample(1:10, 1)
(n - 1) * var(a2) / sigma^2
}
chisq()
mean(a2)
stu1<- function() {
n <- 1000
mu <- sample(0:10, 1)
sigma <- sample(1:10, 1)
x <- rnorm(n, mean = mu, sd = sigma)
(mean(x)-mu) * sqrt(n) / sd(x)
}
stu1<- function() {
n <- 1000
mu <- sample(0:10, 1)
sigma <- sample(1:10, 1)
x <- rnorm(n, mean = mu, sd = sigma)
(mean(x)-mu) * sqrt(n) / sd(x)
}
stu1
stu1()
n <- 1000
alpha <- 0.05
mu <- 42
sigma <- pi
x <- rnorm(n, mean=mu, sd=sigma)
n <- 1000
alpha <- 0.05
mu <- 42
sigma <- pi
x <- rnorm(n, mean=mu, sd=sigma)
ic1<- (mean(x) - qnorm(1-alpha/2) * sigma/sqrt(n))
ic2<- (mean(x) + qnorm(1-alpha/2) * sigma/sqrt(n))
ic1
ic2
mean(x) + c(-1,1) * qnorm(1-alpha/2)*sigma/sqrt(n)
mean(x) + c(-1,1) * qnorm(1-alpha/2)*sigma/sqrt(n)
sigma <- 6
mu <- 3
alpha <- 0.01
ICs1 <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
plot_ICs(ICs1, mu)
plot_ICs(ICs1, mu, xlim=c(2,4))
ICs1 <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
plot_ICs(ICs1, mu)
ICs1 <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
plot_ICs(ICs1, mu)
ICs1 <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
plot_ICs(ICs1, mu)
n <- 1000
sigma <- 6
mu <- 3
alpha <- 0.01
n <- 1000
sigma <- 6
mu <- 3
alpha <- 0.01
ICS <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
ICS_200<- replicate(200, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
ICS <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
ICS_200<- replicate(200, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
gen_IC <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qt(1-alpha/2, df=n-1)*sigma/sqrt(n)
}
# retourne une matrice
ICS <- replicate(100, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
ICS_200<- replicate(200, gen_IC(rnorm(n, mean=mu, sd=sigma), alpha))
plot_ICs(ICS, mu)
plot_ICs(ICS_200, mu)
plot_ICs(ICS, mu)
plot_ICs(ICS_200, mu)
source("utils.R")
source("utils.R")
setwd("documents/school/utc/sem02/sy02/tp")
source("utils.R")
setwd("documents/school/utc/sem02/sy02/tp")
setwd("documents/school/utc/sem02/sy02/tp")
setwd("documents/school/utc/sem02/sy02/tp")
setwd("documents/school/utc/sem02/sy02/tp")
cd
getwd()
source("utils.R")
source("utils.R")
plot_ICs(ICS, mu)
plot_ICs(ICS_200, mu)
n <- 100
alpha <- 0.05
param <- 3
hit <- function(n, param, alpha) {
x <- rnorm(n, mean = param)
IC <- gen_IC(x, alpha)
param >= IC[1] & param <= IC[2]
}
hm <- replicate(10000, hit(n, 3, alpha))
mean(hm)
hm
slutsky <- function(p, n, k, alpha) {
sim <- function() {
x <- rbinom(n, 1, p)
phat <- mean(x)
IC <- phat + c(-1, 1) * qnorm(1 - alpha/2) * sqrt(phat * (1 - phat)/n)
p >= IC[1] & p <= IC[2]
}
mean(replicate(k, sim()))
}
slutsky <- function(p, n, k, alpha) {
sim <- function() {
x <- rbinom(n, 1, p)
phat <- mean(x)
IC <- phat + c(-1, 1) * qnorm(1 - alpha/2) * sqrt(phat * (1 - phat)/n)
p >= IC[1] & p <= IC[2]
}
mean(replicate(k, sim()))
}
p <- 0.02
k <- 10000
alpha <- 0.05
slutsky(p, n, k, alpha)
setwd("documents/school/utc/sem02/sy02/tp")
source("utils.R")
source("utils.R")
load("cctp_P2022.RData")
IC40
IC401
gen_IC <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qt(1-alpha/2, df=n-1)*sigma/sqrt(n)
}
alpha <- 0.05
sigma <- 3
alpha <- 0.05
gen_I <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qnorm(1-alpha/2, df=n-1)*sigma/sqrt(n)
}
alpha <- 0.05
sigma <- 3
alpha <- 0.05
gen_I(IC101, alpha)
gen_I <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qnorm(1-alpha/2)*sigma/sqrt(n)
}
gen_I(IC101, alpha)
gen_ICC <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qt(1-alpha/2, df=n-1)*sd(x)/sqrt(n)
}
IC448
alpha <- 0.01
alpha <- 0.01
gen_ICC(IC448, alpha)
gen_I <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qnorm(1-alpha/2)*sigma/sqrt(n)
}
gen_ICC <- function (x, alpha) {
n <- length(x)
mean(x) + c(-1,1) * qt(1-alpha/2, df=n-1)*sd(x)/sqrt(n)
}
gen_I(IC101, 0.05)
gen_ICC(IC448, 0.01)
donnees <- data.frame(varx = c(0, 0.2, 0.3, 0.6),
vary = c(1.01, 1.44, 1.55, 2.1))
lm(vary~varx, data = donnees)
lm(vary~varx, data = donnees)
donnees
aaa= lm(vary~varx, data = donnees)
a
aaa
lm(vary~varx, data = donnees)
plot(lm(vary~varx, data = donnees)
)
lm(vary~varx, data = donneese)
donneese <- data.frame(varx = c(0, 1, 2, 3),
vary = c(1, 3, 5, 7))
lm(vary~varx, data = donneese)
plot(vary,varx)
donneese <- data.frame(varx = c(0, 1, 2, 3),
vary = c(1, 3, 5, 7))
plot(varx,vary)
donneese <- data.frame(varx = c(0, 1, 2, 3),
vary = c(1, 3, 5, 7))
lm(vary~varx, data = donneese)
plot(varx,vary)
plot(donneese.x,donneese.y)
donneese.
donneese
plot(donneese.varx,donneese.vary)
donneese.varx
donneese$varx
plot(donneese$varx,donneese$vary)
donnees <- data.frame(varx = c(0, 0.2, 0.3, 0.6),
vary = c(1.01, 1.44, 1.55, 2.1))
plot(lm(vary~varx, data = donnees))
varx
plot(donnees$varx,donnees$vary)
?lm
?plot
?abline
plot(donnees$varx,donnees$vary)
plot(donnees$varx,donnees$vary)
?abline
summary(lm(vary~varx, data = donnees))
lm(vary~varx, data = donnees)
lm(vary~varx, data = donnees)[0]
lm(vary~varx, data = donnees)[1]
lm(vary~varx, data = donnees)[1][1]
lm(vary~varx, data = donnees)[1][0]
lm(vary~varx, data = donnees)
abline(1.033,1.789)
plot(donnees$varx,donnees$vary)
abline(1.033,1.789)
reg <- lm(vary~varx, data = donnees)
reg
summary(reg)
reg$coefficients[1]
residuals(reg)
reg$residuals
reg$fitted.values
reg$fitted
fitted(reg)
varx = c(0, 0.2, 0.3, 0.6)
vary = c(1.01, 1.44, 1.55, 2.1)
donnees <- data.frame(varx, vary)
mean(varx)
mean(vary)
vary-mean(vary)
(vary-mean(vary))^2
sum((vary-mean(vary))^2)
sum((vary-mean(vary))^2) / n
sum((vary-mean(vary))^2) / n
var(vary)
sd(vary)
sum((fitted(reg) - mean(vary))^2) / n
sum((residuals(reg) - mean(vary))^2) / n
mean(varx)
mean(vary)
residuals(reg)
sum(residuals(reg))
mean(vary)
reg$coefficients[1] * mean(varx) + reg$coefficients[2]
reg$coefficients[1] * mean(varx) + reg$coefficients[2]
mean(varx)
mean(vary)
varx = c(0, 0.2, 0.3, 0.6)
vary = c(1.01, 1.44, 1.55, 2.1)
donnees <- data.frame(varx, vary)
reg <- lm(vary~varx, data = donnees)
summary(reg)
mean(varx)
mean(vary)
reg$coefficients[1]
1.032933*0.275
reg$coefficients[2]
xb <- mean(donnees$varx)
yb <- mean(donnees$vary)
a_chapeau <- reg$coefficients[1]
b_chapeau <- reg$coefficients[2]
a_chapeau * xb + b_chapeau
points(xb,yb)
n <- length(vary)
x <- donnees$varx
y <- donnees$vary
n <- length(vary)
x <- donnees$varx
y <- donnees$vary
var(y) * (n-1)/n
sum((y-yb)^2) / n
var(y) * (n-1)/n
sum((y-mean(y))^2) / n
a_chapeau * xb + b_chapeau
a_chapeau * xb + b_chapeau
a_chapeau * xb + b_chapeau
b_chapeau
points(xb,a_chapeau * xb + b_chapeau)
S_res <- sum((residuals(reg) - mean(vary))^2) / n
S_res
mean(residuals(reg)^2)
mean(residuals(reg))^2
(n-1)/n *var(fitted(donnees))
S_res
mean(residuals(reg)^2)
S_reg+S_res
S_reg <- sum((fitted(reg) - mean(y))^2) / n
S_reg+S_res
S_reg+S_res
S
S = sum((y-mean(y))^2) / n
S
mean(residuals(reg)^2)
cor(y, fitted(reg))
attach(anscombe)
x1
y1
attach(anscombe)
attach(anscombe)
attach(anscombe)
attach(anscombe)
attach(anscombe)
y2
x2
x3
lm(y1 ~ x1)
lm(y1 ~ x1)
lm(y2 ~ x2)
lm(y3 ~ x3)
lm(y4 ~ x4)
plot(x1,y1)
lm(y1 ~ x1)
lm(y2 ~ x2)
plot(x2,y2)
lm(y3 ~ x3)
plot(x3,y3)
lm(y4 ~ x4)
plot(x4,y4)
plot(x1,y1)
plot(x2,y2)
plot(x4,y4)
anscombe
qqnorm(residuals(reg))
qqline(residuals(reg))
lm(y1 ~ x1)
plot(x1,y1)
reg <- lm(y1 ~ x1, data=anscombe)
qqnorm(residuals(reg))
qqline(residuals(reg))
reg1 <- lm(y1 ~ x1, data=anscombe)
reg4 <- lm(y4 ~ x4, data=anscombe)
qqnorm(residuals(reg1))
qqline(residuals(reg1))
qqnorm(residuals(reg4))
qqline(residuals(reg4))
qqnorm(residuals(reg1))
qqline(residuals(reg1))
qqnorm(residuals(reg4))
qqline(residuals(reg4))
qqnorm(residuals(reg4))
reg1 <- lm(y1 ~ x1, data=anscombe)
reg2 <- lm(y2 ~ x2, data=anscombe)
reg3 <- lm(y3 ~ x3, data=anscombe)
reg4 <- lm(y4 ~ x4, data=anscombe)
qqnorm(residuals(reg3))
qqline(residuals(reg3))
qqnorm(residuals(reg2))
qqline(residuals(reg2))
qqnorm(residuals(reg1))
qqline(residuals(reg1))
qqnorm(residuals(reg4))
qqline(residuals(reg4))
summary(reg1)
rstandard((reg1))
rstandard((reg1))
plot(fitted(reg1), rstandard((reg1)))
plot(fitted(reg2), rstandard((reg2)))
plot(fitted(reg3), rstandard((reg3)))
plot(fitted(reg4), rstandard((reg4)))
plot(reg4)
rstandard((reg1))
plot(fitted(reg1), rstandard((reg1))) # il ne doit pas avoir de lien
plot(reg1)
plot(fitted(reg1), rstandard((reg1)))
plot(x1, rstandard((reg1)))
plot(x1, rstandard((reg1)))
read.csv(('hooker-data.data '))
getwd()
df <- read.csv(('tp5 Reg Lin/hooker-data.data '))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data '))
ls
getwd()
df <- load(('tp5_Reg_Lin/hooker-data.data '))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data '))
df <- read.csv(('tp5_Reg_Lin/hooker-data.csv'))
df <- read.csv(('tp5_Reg_Lin\hooker-data.csv'))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data'))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data'))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data'))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data'))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data'))
df <- read.csv(('tp5_Reg_Lin/hooker-data.data'))
df
df.cols
df.columns
summary(df)
lm(df$Pression ~ df$Temp)
plot(df$Temp, df$Pression)
regP <- lm(df$Pression ~ df$Temp)
summary(df)
regP.coefficients
regP.coefficient
plot(df$Temp, df$Pression)
abline(regP$coefficients[1], regP$coefficients[2])
?confint
confint(regP)
confint(regP, level=0.99)
abline(regP$coefficients[1], regP$coefficients[2])
confint(regP, parm=df$Temp,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP, parm=df$Pression,level=0.99)
confint(regP,level=0.99)
regP
?predict.lm
plot(regP)
?predict.lm
predict(regP)
predict(regP, 97)
test= data.frame(x=97)
test
predict(regP, test)
predict(regP, newdata=test)
replicate(4)
replicate(4,2)
length(df)
dim(df)
test= data.frame(x=replicate(31,97)
test
test= data.frame(x=replicate(31,97))
test
predict(regP, newdata=test)
plot(test)
plot(test$x)
predict(regP, newdata=test)
predict(regP, newdata=test)[1]
predict(regP, newdata=test)[1,]
predict(regP, newdata=test)[,]
predict(regP, newdata=test)
plot(test$x, predict(regP, newdata=test))
?predict.lm
predict(regP, newdata=test, interval = "prediction")
test <- data.frame(x=97)
regP <- lm(Pression ~ Temp)
Pression <- df$Pression
Temp <- df$Temp
regP <- lm(Pression ~ Temp)
test <- data.frame(Temp=97)
predict(regP, newdata=test, interval = "prediction")
plot(test$x, predict(regP, newdata=test))
test <- data.frame(Temp=97)
predict(regP, newdata=test, interval = "prediction")
plot(test$Temp, predict(regP, newdata=test))
plot(test$Temp, predict(regP, newdata=test))
test <- data.frame(Temp=replicate(31,97))
predict(regP, newdata=test, interval = "prediction")
plot(test$Temp, predict(regP, newdata=test))
test <- data.frame(Temp=c(60,97))
predict(regP, newdata=test, interval = "prediction")
test <- data.frame(Temp=c(60,97))
predict(regP, newdata=test)
predict(regP, newdata=test, interval = "prediction")
test <- data.frame(Temp=c(60,97))
predict(regP, newdata=test)
predict(regP, newdata=test, interval = "prediction")
plot(test$Temp, predict(regP, newdata=test))
